# WIP - tools for stepper motor phase analysis

# Gather stepper motor data at various speeds
[gcode_macro TMC_TEST_SPEED]
gcode:
    {% set speeds = [5, 10, 15, 20, 25] %}
    {% set XY1 = (110, 110) %}
    {% set XY2 = (10, 10) %}
    {% set stepper_driver = "tmc2209 stepper_x" %}

    # Test code
    {% set initspeed = 20 %}
    {% set accel = printer.toolhead.max_accel %}

    G1 X{XY1[0]} Y{XY1[1]} F{initspeed * 60}
    G4 P200
    { action_call_remote_method("motan_log", stepper_driver=stepper_driver) }
    {% for speed in speeds %}
        {% set acceltime = speed / accel %}

        G4 P0
        REPORT_TIME START=1 NAME="speed {speed}mm/s" OFFSET={acceltime}
        G1 X{XY2[0]} Y{XY2[1]} F{speed * 60}
        G4 P0
        REPORT_TIME START=0 OFFSET={ -acceltime }

        REPORT_TIME START=1 NAME="speed {speed}mm/s" OFFSET={acceltime}
        G1 X{XY1[0]} Y{XY1[1]} F{speed * 60}
        G4 P0
        REPORT_TIME START=0 OFFSET={ -acceltime }
    {% endfor %}

# Test with different driver measurement delay time
[gcode_macro TMC_TEST_TBL]
gcode:
    {% set speed = 20 %}
    {% set XY1 = (110, 110) %}
    {% set XY2 = (10, 10) %}
    {% set tbl_values = [3, 2, 1, 0] %}
    {% set stepper_driver = "tmc2209 stepper_x" %}

    # Test code
    {% set accel = printer.toolhead.max_accel %}
    {% set stepper = stepper_driver.split()[-1] %}

    G1 X{XY1[0]} Y{XY1[1]} F{speed * 60}
    G4 P200
    { action_call_remote_method("motan_log", stepper_driver=stepper_driver) }
    {% for tbl in tbl_values %}
        {% set acceltime = speed / accel %}

        SET_TMC_FIELD STEPPER={stepper} FIELD=TBL VALUE={tbl}

        G4 P0
        REPORT_TIME START=1 NAME="TBL {tbl}" OFFSET={acceltime}
        G1 X{XY2[0]} Y{XY2[1]} F{speed * 60}
        G4 P0
        REPORT_TIME START=0 OFFSET={ -acceltime }

        REPORT_TIME START=1 NAME="TBL {tbl}" OFFSET={acceltime}
        G1 X{XY1[0]} Y{XY1[1]} F{speed * 60}
        G4 P0
        REPORT_TIME START=0 OFFSET={ -acceltime }
    {% endfor %}

# Test with different driver hysteresis amps
[gcode_macro TMC_TEST_HEND]
gcode:
    {% set speed = 100 %}
    {% set XY1 = (110, 110) %}
    {% set XY2 = (10, 10) %}
    {% set hend_values = [9, 8, 7, 6, 5, 4, 3, 2] %}
    {% set stepper_driver = "tmc2209 stepper_x" %}

    # Test code
    {% set accel = printer.toolhead.max_accel %}
    {% set stepper = stepper_driver.split()[-1] %}
    SET_TMC_FIELD STEPPER={stepper} FIELD=HSTRT VALUE=0

    G1 X{XY1[0]} Y{XY1[1]} F{speed * 60}
    G4 P200
    { action_call_remote_method("motan_log", stepper_driver=stepper_driver) }
    {% for hend in hend_values %}
        {% set acceltime = speed / accel %}

        SET_TMC_FIELD STEPPER={stepper} FIELD=HEND VALUE={hend}

        G4 P0
        REPORT_TIME START=1 NAME="HEND {hend}" OFFSET={acceltime}
        G1 X{XY2[0]} Y{XY2[1]} F{speed * 60}
        G4 P0
        REPORT_TIME START=0 OFFSET={ -acceltime }

        REPORT_TIME START=1 NAME="HEND {hend}" OFFSET={acceltime}
        G1 X{XY1[0]} Y{XY1[1]} F{speed * 60}
        G4 P0
        REPORT_TIME START=0 OFFSET={ -acceltime }
    {% endfor %}

# Test with different driver recirculate time
[gcode_macro TMC_TEST_TOFF]
gcode:
    {% set speed = 20 %}
    {% set XY1 = (10, 60) %}
    {% set XY2 = (50, 60) %}
    {% set toff_values = [10, 9, 8, 7, 6, 5, 4, 3, 2] %}
    {% set stepper_driver = "tmc2209 stepper_x" %}

    # Test code
    {% set stepper = stepper_driver.split()[-1] %}

    G1 X{XY1[0]} Y{XY1[1]} F{speed * 60}
    G4 P200
    {% for toff in toff_values %}
        SET_TMC_FIELD STEPPER={stepper} FIELD=TOFF VALUE={toff}
        G1 X{XY2[0]} Y{XY2[1]} F{speed * 60}
        G1 X{XY1[0]} Y{XY1[1]} F{speed * 60}
    {% endfor %}

# Helper function - report start and end times to motan log
[gcode_macro REPORT_TIME]
gcode:
    {% set time = printer.toolhead.print_time %}
    {% set offset = params.OFFSET|float %}
    {% set is_start = params.START|default(0)|int %}
    {% set name = params.NAME %}

    {% if is_start %}
        { action_respond_info("Starting run '" + name + "'") }
        { action_call_remote_method("motan_log", start=time+offset, name=name) }
    {% else %}
        { action_call_remote_method("motan_log", end=time+offset) }
    {% endif %}
